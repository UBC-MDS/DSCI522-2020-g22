ML_reg %>%
tidy()
ML_reg %>%
tidy()
pred_response <- tibble(
model = c(
rep("SLR", 491),
rep("MLR", 491)
),
predicted_percentage= c(
SL_reg$fitted.values,
ML_reg$fitted.values
),
total_engagement_percentage = rep(facebook_data$total_engagement_percentage, 2)
)
head(pred_response)
SL_reg_n50 <- lm(total_engagement_percentage ~ page_engagement_percentage, data = facebook_data_2)
SL_reg_n50 %>% tidy()
SL_reg_post_category <- lm(total_engagement_percentage ~ post_category, data = facebook_data)
SL_reg_post_category %>% tidy()
reticulate::repl_python()
setwd("~/Desktop/UBC/MDS_2020-2021/Block3/DSCI_522/project/DSCI522-2020-g22")
reticulate::repl_python()
library(tidyverse)
library(docopt)
library(ggthemes)
library(ggridges)
theme_set(theme_minimal())
opt <- docopt(doc)
"This script reads the model model scores and creates a plot for each model based on the hyperparameter values and accuracy.
Usage: report_figures.py --model=<model> --save_figures=<save_figures>
Options:
--model=<model>                - Path to the model scores
--save_figures=<save_figures>   - Path to saving the figures
" -> doc
library(tidyverse)
library(docopt)
library(ggthemes)
library(ggridges)
theme_set(theme_minimal())
opt <- docopt(doc)
gaussian <- read.csv("results/model_scores/gaussiannb_hyperparameters.csv")
head(gaussian)
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing)
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( predictor = str_to_title(predictor),
predictor = str_replace_all(predictor, "_", " "))
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( predictor = str_to_title(split),
predictor = str_replace_all(split, "_", " "))
gaussian <- read.csv("results/model_scores/gaussiannb_hyperparameters.csv")
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( predictor = str_to_title(split),
predictor = str_replace_all(split, "_", " "))
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " "))
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_point()
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_point()+
scale_x_continuous(trans='log2')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_line()+
scale_x_continuous(trans='log2')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_line()+
scale_x_continuous(trans='log10')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_line()+
scale_x_continuous(trans='loge')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_line()+
scale_x_continuous(trans='log')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_line()+
scale_x_continuous(trans='log10')
geom_point(+
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_point()+
scale_x_continuous(trans='log10')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_point()+
scale_x_continuous(trans='log10')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_point()+
scale_x_continuous(trans='log10')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_point()+
geom_line()+
scale_x_continuous(trans='log10')
gaussian %>% select(mean_train_score,mean_test_score, param_gaussiannb__var_smoothing) %>%
gather(key = split, value = score, -param_gaussiannb__var_smoothing) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_gaussiannb__var_smoothing, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5)+
scale_x_continuous(trans='log10')
gaussian <- read.csv(model)
decision <- read_csv("results/model_scores/decisiontreeclassifier_hyperparameters.csv")
head(decision)
decision %>%
select(mean_train_score,mean_test_score, )
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth )
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " "))
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_decisiontreeclassifier__max_depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_decisiontreeclassifier__max_depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 5)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_decisiontreeclassifier__max_depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(param_decisiontreeclassifier__max_depth = Max Depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= Max Depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(param_decisiontreeclassifier__max_depth = Max Depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= Max Depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(param_decisiontreeclassifier__max_depth = `Max Depth`) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(param_decisiontreeclassifier__max_depth = `Max Depth`) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_decisiontreeclassifier__max_depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth )
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(param_decisiontreeclassifier__max_depth = "Max Depth")
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(Max Depth = param_decisiontreeclassifier__max_depth)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth`) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth`) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score")
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth`) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth")
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth`) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth", legend=NA)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth`) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth", split=NA)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth`) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth", color=NA)
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
rename(`Max Depth` = param_decisiontreeclassifier__max_depth) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
`Max Depth`) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= `Max Depth`, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth", color="")
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_decisiontreeclassifier__max_depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth", color="")
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_decisiontreeclassifier__max_depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth", color="", title ="f1 score for Decision Tree Classifier with sample leaves = 1,2,3,4")
decision %>%
select(mean_train_score,mean_test_score,
param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth ) %>%
gather(key = split, value = score, -c(param_decisiontreeclassifier__min_samples_leaf,
param_decisiontreeclassifier__max_depth) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_decisiontreeclassifier__max_depth, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_decisiontreeclassifier__min_samples_leaf , scale = "free", ncol = 2)+
labs(y="Score" , x = "Max Depth", color="", title ="f1 score, sample leaves = 1,2,3,4")
logistic %>%
select(mean_train_score,mean_test_score)
logistic <- read_csv("results/model_scores/logisticregression_hyperparameters.csv")
logistic %>%
select(mean_train_score,mean_test_score)
logistic %>%
select(mean_train_score,mean_test_score,
param_logisticregression__solver, param_logisticregression__C)
logistic %>%
select(mean_train_score,mean_test_score,
param_logisticregression__solver, param_logisticregression__C) %>%
gather(key = split, value = score,
-c(param_logisticregression__solver, param_logisticregression__C) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " "))
logistic %>%
select(mean_train_score,mean_test_score,
param_logisticregression__solver, param_logisticregression__C) %>%
gather(key = split, value = score,
-c(param_logisticregression__solver, param_logisticregression__C) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_logisticregression__C, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_logisticregression__solver , scale = "free", ncol = 2)+
labs(y="Score" , x = "Hyperparameter C", color="", title ="f1 score, Linear Solver")
logistic %>%
select(mean_train_score,mean_test_score,
param_logisticregression__solver, param_logisticregression__C) %>%
gather(key = split, value = score,
-c(param_logisticregression__solver, param_logisticregression__C) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_logisticregression__C, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_logisticregression__solver , scale = "free", ncol = 2)+
scale_x_continuous("log10")+
labs(y="Score" , x = "Hyperparameter C", color="", title ="f1 score, Linear Solver")
logistic %>%
select(mean_train_score,mean_test_score,
param_logisticregression__solver, param_logisticregression__C) %>%
gather(key = split, value = score,
-c(param_logisticregression__solver, param_logisticregression__C) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_logisticregression__C, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_logisticregression__solver , scale = "free", ncol = 2)+
scale_x_continuous("log10")+
labs(y="Score" , x = "Hyperparameter C", color="", title ="f1 score, Linear Solver")
logistic %>%
select(mean_train_score,mean_test_score,
param_logisticregression__solver, param_logisticregression__C) %>%
gather(key = split, value = score,
-c(param_logisticregression__solver, param_logisticregression__C) ) %>%
mutate( split = str_to_title(split),
split = str_replace_all(split, "_", " ")) %>%
ggplot(aes(x= param_logisticregression__C, y = score, color = split  ))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(. ~param_logisticregression__solver , scale = "free", ncol = 2)+
scale_x_continuous(trans='log10')+
labs(y="Score" , x = "Hyperparameter C", color="", title ="f1 score, Linear Solver")
import pandas as pd
reticulate::repl_python()
